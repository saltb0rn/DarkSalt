#+title: 图形学-投影以及观察
#+date: 2020-06-19
#+index: 图形学-投影以及观察
#+tags: Graphics
#+begin_abstract
之前只讲了几何变换,也就是最简单的变换,

http://math.hws.edu/graphicsbook/c3/s3.html

本文主要讲述 =OpenGL= 的各种坐标系以及它们之间的转换,这对于理解 =OpenGL= 的渲染管线/渲染流水线很有必要.
#+end_abstract


用来画对象(object),或者说指定顶点(vertex)的坐标系叫做对象坐标系(object coordinates).

在 =OpenGL= 中,复杂的对象是由简单的对象构成的,最简单的对象叫做图元(primitive),一旦画出对象接下来就由两种可能,

A. 把不同对象组装成更加复杂的对象.

B. 把对象放到场景(scene)/世界(world)中.

其实场景/世界就是所有对象里面最复杂,最大的那个对象,定义场景/世界的坐标系叫做世界坐标系(world coordinates),本质就是一个对象坐标系.

$A$ 过程中对象是经历了从一个对象坐标系到另外一个对象坐标系的变换, $B$ 过程是对象经历了从对象坐标系到世界坐标系(world coordinates)的变换,

本质都是从 *一个对象坐标系到另外一个对象坐标系的变换,这种变换叫做模型变换(modeling transformation)*.



在现实中,一个人看到的东西是由他的位置以及看的方向所决定的,在 =OpenGL= 中也有类似的存在,叫做 =viewer=,它有自己的坐标系用来描述它的位置以及看的方向,这个坐标系叫做视点坐标系(eye coordinates).

在该坐标系中, =Viewer= 位于原点 $\left(0, 0, 0\right)$ 上看着 $z$ 轴的负方向(就是向这屏幕里), $y$ 轴的正方向是向上, $x$ 轴的正方向是向右(简单点说就是右手坐标系),这是一个以 =viewer= 为中心的坐标系统 (=viewer-centric coordinate system=).


