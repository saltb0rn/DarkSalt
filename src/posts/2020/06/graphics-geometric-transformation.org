#+title: 图形学-几何变换
#+date: 2020-06-10
#+index: 图形学-几何变换
#+tags: Graphics
#+begin_abstract
几何变换(geometric transformation)是图形学里面的一个重要基础知识点,

所谓的几何变换可以它看做一个函数就是: 输入几何对象里面的所有点,输出一个新的几何对象.

举个例子,假如 $p$ 点在坐标系下 $A$ 中坐标是 $\left(x, y\right)$,假设现在坐标 $B$ 是 $A$ 逆时针旋转 $\theta$ 度后得到的,

同样 $p$ 也跟着 $A$ 的旋转到达 $p^{'}$ 这个位置, $p^{'}$ 在 $B$ 上也是 $\left(x, y\right)$, 但是 $p^{'}$ 在 $A$ 的坐标呢?现在就是要求 $p^{'}$ 在 $A$ 上的坐标 $\left(x^{'}, y_{'}\right)$.

这就是几何变换的作用.$A$ 和 $B$ 分别是 $p$ 和 $p^{'}$ 自身的坐标系, $p$ 永远处于 $A$ 的原点, $p^{'}$ 和 $B$ 同理, $A$ 和 $B$ 分别叫做 $p$ 和 $p^{'}$ 的物体坐标系(object coordinate system).

这跟坐标变换(coordinate transformation)不同,在于几何变换只是在改变点本身,而坐标变换只是改变点的参考坐标系,但是由于坐标与点之间的相对性来说,变换其中一个就是在以另外一个作为参照物,

举个例子,移动坐标系的位置,相对的点也发生了移动,这和移动点本身造成的效果是一样的,所以虽然本质不一样,但是它们的计算都基本都是 $Ax = y$ 这种形式.

这个要好好记住,否则会影响接下来的理解.回到主题,常见的几何变换包括对象的 *缩放,平移以及旋转*,这些都可以通过矩阵来进行描述.

而矩阵的含义就是等同于"映射/变换",所以在了解之前需要先了解一些线性代数的知识,我也不是这方面的专家,就不分享自己微不足道的学习经验了.

实际上如果单纯只是为了应用的话,记住结论就可以了,但是个人认为,如果真的打算与图形学打交道,那么只有理解了为什么才能愉快地与图形学相处,

否者会过的很痛苦.很多参考资料都是直接给出变换的结论,没有推导过程,或者有不完全的推导过程,所以我才下定注意写下自己思考.
#+end_abstract

*** 实际例子

    用一个人 "John Smith" 走路去坐巴士作为演示,通过 *伸缩/平移/旋转* 这三个词进行描述,为了容易理解,我们把 "John Smith" 看作一个长方体,

    场景: John Smith 往他的前方直行到一个路口,左转后继续直行到巴士停靠的位置,最后上车坐车.

    解释:

    - *往他的前方直行* 就是一个 *平移*,直行了多远就是沿着他的方向平移了多远.

    - *左转* 就是一个 *旋转*,向左边方向旋转了多少度,这里假设是90度,通常路口都是直角.

    - *上车坐车* 就是一个 *伸缩*,可能车门的高度不高过 John Smith 的身高,所以 John Smith 要弯下腰降低高度,这样就是沿着身高缩放了.


    如果这个过程要通过数学的方式描述出来,那么就要进入正文了,等了解完以后回这个例子感受以下.


*** 几个该清楚的概念

**** 欧几里得空间以及仿射空间

欧几里得空间(Euclidean space)是一套度量空间(这里的空间真的是时空里的空间),基于向量空间/线性空间补充一些新定义(向量的长度,以及向量之间的一些"乘法",这些会在文章后面需要用上的时候进行补充),

在数学上经常用于研究二维以及三维空间,大概知道它用来干什么就可以了,这里也不详细说.

笛卡尔坐标系(Cartesian coordinate system) 是一套坐标系,分为正交坐标系以及斜交坐标系(区别就是坐标轴之间是否相互垂直,是的话就是正交坐标系,否的话就是斜交坐标系).

正交坐标系刚好和欧几里得基于三个相互垂直的向量构成一个3维空间这点一致,所以可以认为笛卡尔坐标系为欧几里得空间提供了一把标尺.

任何通过原点的直线或者平面都是欧几里得的子线性空间(线性空间必须包含原点,而子线性空间本质还是线性空间).

那些没有通过原点的直线或者平面就是仿射空间(Affine space)的一个例子,它们也具备线性,所以通俗点理解:仿射空间相当于线性空间去掉原点,或者子线性空间平移后得到的空间.

由于仿射空间没有原点这个概念,所以坐标系这个概念也不复存在,向量不再是从原点出发到某个点的直线了,而是退化为了点,并且点也不能通过坐标表示.

不过就算没有了原点,在仿射空间下依然可以通过 $x$ 和 $y$ 两个点来找到一条直线 $v$(从 $x$ 移动到 $y$)作为类似线性空间的向量: $v = y - x$,差别在于出发点不同.

这个从点到点之间的移动的变换就叫仿射变换(Affine Transformation),以后还会遇到它.

虽然点没有办法用坐标来表示,不过由于仿射空间具备线性,在研究空间问题时可以引入仿射空间解决问题,也就是说,可以用仿射空间的概念来处理坐标系上的问题.


*** 2D变换

    2D 变换和 3D 变换同等重要,并且有一定的联系,先理解 2D 变换有助于理解 3D 变换.

    在 2D 变换中,这里所有的例子都是基于平面版本的正交坐标系,用矩阵表示该坐标系就是 $\left(\begin{array}{c}1 & 0 \\ 0 & 1\end{array}\right)$.

    也就是 $y$ 轴的正方向是向上, $x$ 轴的正方向是向右.

    这里还需要一位主角: 点 $p$, 它的坐标为 $\left(x_{p}, y_{p}\right)$.

    我们把该坐标系看做属于 $p$ 自身的坐标系,这种坐标系叫做目标坐标系(object coordinates),后面的 3D 变换推导也是一样.

**** 平面平移

     基本的平面平移分两个方向: 沿着 $x$ 轴和沿着 $y$ 轴平移,分别的移动距离是 $d_{x}$ 和 $d_{y}$.

     所以描述 $p$ 的平移是这样的: 先沿着 $x$ 轴方向移动 $d_{x}$,然后沿着 $y$ 轴方向移动 $d_{y}$.

     #+CAPTION: 平面平移
     [[../../../files/2d-translation.png]]

     这里先沿着 $x$ 轴移动 $d_{x}$ 还是先沿着 $y$ 轴移动 $d_{y}$ 都无所谓,到达的最终地点都是 $p^{'}$: $\left(x_{p}^{'}, y_{p}^{'}\right) = \left(x_{p}+d_{x}, y_{p}+d_{y}\right)$.

     用矩阵表示就是这个平移的过程就是 $\left(\begin{array}{c}x_{p}^{'} \\ y_{p}^{'} \\ 1 \end{array}\right) = \left(\begin{array}{c}1 & 0 & d_{x} \\ 0 & 1 & d_{y} \\ 0 & 0 & 1\end{array}\right)\left(\begin{array}{c}x_{p} \\ y_{p} \\ 1\end{array}\right)$.

     要注意,在3种变换中,只有平移不是线性变换,它是仿射变换.

     这里用函数 $translate(p, d_{x}, d_{y})$ 表示平移.

     这里还有一个有趣的事实,就是 $translate(p, d_{x}, d_{y})$ 后到达 $p^{'}$,如果 $p^{'}$ 再发生一次平移 $translate(p^{'}, dx^{'}, dy^{'})$ 到达 $p^{''}$,这整个过程等于 $translate(p, d_{x} + d_{x}^{'}, d_{y} + d_{y}^{'})$.

     还有就是三种变换中只有平移会导致 $p$ 偏移了原点,这个事实会在以后的坐标系变换学习里面提到.

**** 平面伸缩

     和平面平移类似,伸缩也分两个方面: 坐标系的 $x$ 轴变为原来的 $r_{x}$ 倍, 坐标系的 $y$ 轴变为原来的 $r_{y}$ 倍.

     坐标系伸缩后 $p$ 到达 $p_{'}$: $p^{'}$: $\left(x_{p}^{'}, y_{p}^{'}\right) = \left(r_{x}x_{p}, r_{y}y_{p}\right)$.

     #+CAPTION: 平面伸缩
     [[../../../files/2d-scale.png]]

     用矩阵表示这个伸缩的过程就是 $\left(\begin{array}{c}x_{p}^{'} \\ y_{p}^{'}\end{array}\right) = \left(\begin{array}{c}r_{x} & 0 \\ 0 & r_{y}\end{array}\right)\left(\begin{array}{c}x_{p} \\ y_{p}\end{array}\right)$.

     这里用函数 $scale(p, r_{x}, r_{y})$ 表示.

**** 平面旋转

     平面旋转就是坐标系围绕着原点进行旋转,旋转后得到一个新的坐标系,并且 $p$ 到达 $p_{'}$.

     新坐标系的 $y^{'}$ 轴和 $x^{'}$ 轴分别就是原来的 $y$ 和 $x$ 旋转 $\theta$ 得来的.

     不过现在先不这么想,等过了一轮推导后再回来看.

     在 $x$ 轴取一个点 $r$: $\left(1, 0\right)$,从原点出发分别到这个点,根据这条线画一个圆.

     旋转 $\theta$ 度后到达 $r^{'}$: $\left(x_{r}^{'}, y_{r}^{'}\right)$,把这条线 $\vec{or^{'}}$ 看作是三角形的斜边,这条线的长度 $\|\vec{or^{'}}\|$ 为 1.

     #+CAPTION: 平面旋转
     [[../../../files/2d-rotation.png]]

     再结合一点三角函数可以得出 $x_{r}^{'} = \frac{x_{r}^{'}}{\|\vec{or^{'}}\|} = \cos \theta$ 以及 $y_{r}^{'} = \frac{x_{y}^{'}}{\|\vec{or^{'}}\|} = \sin \theta$,

     所以 $r^{'} = \left(\cos \theta, \sin \theta\right)$.

     接下来再推导 $y$ 轴上的 $\left(0, 1\right)$ 经过旋转后的 $r^{''}$,这里可以直接继续用 $r$ 开始旋转来进行推导,

     $r^{''}$: $\left(x_{r}^{''}, y_{r}^{''}\right)$ 就是 $r$ 旋转 $90 + \theta$ 度后到达的坐标,

     同样结合三角函数可以得出 $x_{r}^{''} = \frac{x_{r}^{''}}{\|\vec{or^{''}}\|} = \cos \left(90+\theta\right)$ 以及 $y_{r}^{''} = \frac{x_{y}^{''}}{\|\vec{or^{''}}\|} = \cos \theta$.

     而 $\cos \left(90+\theta\right) = - \sin \theta$,所以这里也可以看作是从 $\left(0, 1\right)$ 旋转,所以 $r_{''} = \left(-\sin\theta, \cos\theta\right)$.

     回到最开始说到的,本质是坐标轴的旋转,我们得到的 $r^{'}$ 以及 $r^{''}$ 恰好就可以作为表示新坐标系的基向量,

     所以新坐标系的基底就是 $\left(\begin{array}{c} \cos\theta & -\sin\theta \\ \sin\theta & \cos\theta \end{array}\right)$.

     用矩阵表示 $p$ 围绕原点旋转 $\theta$ 度这个过程就是 $\left(\begin{array}{c}x_{p}^{'} \\ y_{p}^{'}\end{array}\right) = \left(\begin{array}{c} \cos\theta & -\sin\theta \\ \sin\theta & \cos\theta \end{array}\right)\left(\begin{array}{c}x_{p} \\ y_{p}\end{array}\right)$.

     这里用函数 $rotate(p, \theta)$ 表示.

**** 综合三种平面变换

     上面三种变换可以通过一个通用的矩阵表示,而实际开发中很多工具都提供了对应的接口,综合起来就是 $\left(\begin{array}{c}a & b & e \\ c & d & f \\ 0 & 0 & 1\end{array}\right)$.

     可以只通过一个矩阵表示多次变换,也就是多个变换的矩阵全部相乘得到的那个矩阵.

     这里用函数 $matrix(a, b, c, d, e, f)$ 表示,实际中不同工具中的参数顺序可能是不一样的,所以这个不用太在意.

**** 拓展思考

     目前提到平面旋转是 $p$ 围绕原点旋转的,那么围绕任意点 $q$: $\left(x_{q}, y_{q}\right)$ 呢?

     可以这么思考,先把 $q$ 设定为新原点 $o^{'}$: $(0, 0)$,也就是旧原点 $o$ 变换到 $o^{'}$,这是一个平面平移.

     在新原点下, $p$ 的新坐标是 $\left(x_{p} - x_{q}, y_{p} - y_{q}\right)$.

     剩下的就是围绕新原点 $o^{'}$ 进行旋转了,同样在新 $x$ 轴上取一个点 $r$: $(1, 0)$,用这根从 $o^{'}$ 到 $r$ 的线条以 $o^{'}$ 为中心画一个圆,

     剩下推导过程就是和之前的一样了,最后得出和以前一样的矩阵 $\left(\begin{array}{c} \cos\theta & -\sin\theta \\ \sin\theta & \cos\theta \end{array}\right)$.

     然后 $p$ 通过矩阵到达 $p^{'}$: $\left(\begin{array}{c} \cos\theta & -\sin\theta \\ \sin\theta & \cos\theta \end{array}\right)\left(\begin{array}{c}x_{p} - x_{q} \\ y_{p} - y_{q}\end{array}\right) = \left(\begin{array}{c} (x_{p} - x_{q})\cos \theta - (y_{p} - y_{q})\sin \theta  \\ (x_{p} - x_{q})\sin \theta + (y_{p} - y_{q})\cos \theta \end{array}\right)$.

     最后再把原点平移回去,$p^{'}$ 的坐标就变成 $\left(\begin{array}{c} (x_{p} - x_{q})\cos \theta - (y_{p} - y_{q})\sin \theta + x_{q} \\ (x_{p} - x_{q})\sin \theta + (y_{p} - y_{q})\cos \theta + y_{q} \end{array}\right)$.

     (这个矩阵写起来有点蛋疼,就不写了).要注意,这个不是线性变换.这个推导最好还是要掌握,说不定就用上了.


*** 3D变换

    3D 变换可以想象成是 2D 变换的升级版: 多了一个维度.不过就算这么说,实际上 3D 变换的推导过程要远比 2D 变换的推导复杂很多.

    主角 $p$ 来到 3D 后就变成 $\left(x_{p}, y_{p}, z_{p}\right)$,坐标系变成三维版本的正交坐标系,用矩阵表示就是 $\left(\begin{array}{c}1 & 0 & 0 \\ 0 & 1 & 0 \\ 0 & 0 & 1 \end{array}\right)$.

    这里要说一下,这里用的是右手坐标系(right-hand system), $z$ 轴的正方向指向屏幕外, $y$ 轴正方向指向上方, $x$ 轴正方向指向右边,旋转方向是逆时针.

    #+CAPTION: 右手坐标系(图片来自网络)
    [[../../../files/right-hand-system.jpg]]

    有右手坐标系就有左手坐标系,不同之处在于 $z$ 轴的正方向以及旋转的方向相反.

**** 三维平移

     这个很简单,就是比平面平移多了一个维度,推导过程没什么好说的,用矩阵表示这个平移的过程就是 $\left(\begin{array}{c}x_{p}^{'} \\ y_{p}^{'} \\ z_{p}^{'} \\ 1 \end{array}\right) = \left(\begin{array}{c}1 & 0 & 0 & d_{x} \\ 0 & 1 & 0 & d_{y} \\ 0 & 0 & 1 & d_{z} \\ 0 & 0 & 0 & 1 \end{array}\right)\left(\begin{array}{c}x_{p} \\ y_{p} \\ y_{z} \\ 1\end{array}\right)$.

**** 三维伸缩

     这个也很简单,同样没什么好说,用矩阵表示这个伸缩的过程就是 $\left(\begin{array}{c}x_{p}^{'} \\ y_{p}^{'} \\ z_{p}^{'}\end{array}\right) = \left(\begin{array}{c}r_{x} & 0 & 0 \\ 0 & r_{y} & 0 \\ 0 & 0 & r_{z}\end{array}\right)\left(\begin{array}{c}x_{p} \\ y_{p} \\ z_{p}\end{array}\right)$.

**** 三维旋转

     这个就稍微复杂一点,多了一个维度就多了很多种旋转方式了,和平面旋转不一样在于: 平面旋转是围绕某一个点进行的,而三维旋转是围绕某一条直线进行的.

     所以这里分好几种情况,不过如果能够真正理解平面旋转的推导,这里再只要加一把劲就可以理解了.

***** 围绕 $z$ 轴进行旋转

      *这种围绕某一轴旋转的问题可以统一看做垂直于该轴的平面旋转*,这么一说是不是脑海里面有画像了?

      围绕 $z$ 轴进行旋转就是 $x$ 和 $y$ 轴构成的平面的平面旋转, $p$ 经过旋转后到达 $p^{'}$: $\left(x_{p}^{'}, y_{p}^{'}, z_{p}\right)$.

      没错,围绕 $z$ 轴旋转的话, $p^{'}$ 的 $z$ 分量没有变,再仔细想一下, $x$ 和 $y$ 构成的平面旋转不就是在 2D 变换里面推导的那一个吗?

      假设现在围绕 $z$ 轴旋转 $\theta$ 度,那么这个旋转过程用矩阵表示就是 $\left(\begin{array}{c}x_{p}^{'} \\ y_{p}^{'} \\ z_{p}^{'} \end{array}\right) = \left(\begin{array}{c} \cos \theta & -sin \theta & 0 \\ \sin \theta & \cos \theta & 0 \\ 0 & 0 & 1 \end{array}\right)\left(\begin{array}{c} x_{p} \\ y_{p} \\ z_{p} \end{array}\right)$.

      既然 $z$ 轴都推导出来了,那么围绕 $x$ 轴以及 $y$ 轴都分别可以开始推导出来.

***** 围绕 $x$ 轴进行旋转

      如同上面的推导,可以快速得出 $p$ 围绕 $x$ 轴旋转 $\theta$ 度后到达 $p^{'}$ 的过程,用矩阵表示 $\left(\begin{array}{c}x_{p}^{'} \\ y_{p}^{'} \\ z_{p}^{'} \end{array}\right) = \left(\begin{array}{c} 1 & 0 & 0 \\ 0 & \cos \theta & -\sin \theta \\ 0 & \sin \theta & \cos \theta \end{array}\right)\left(\begin{array}{c} x_{p} \\ y_{p} \\ z_{p} \end{array}\right)$.

***** 围绕 $y$ 轴进行旋转

      同理, $p$ 围绕 $y$ 轴旋转 $\theta$ 度后到达 $p^{'}$ 的过程,用矩阵表示 $\left(\begin{array}{c}x_{p}^{'} \\ y_{p}^{'} \\ z_{p}^{'} \end{array}\right) = \left(\begin{array}{c} \cos \theta & 0 & - \sin \theta \\ 0 & 1 & 0 \\ \sin \theta & 0 & \cos \theta \end{array}\right)\left(\begin{array}{c} x_{p} \\ y_{p} \\ z_{p} \end{array}\right)$.

      这些都经过本人手动推导过得,由于写出来就很冗余,所以就省略了,还是推荐大家自己手动推导验证一下.

***** 围绕任意通过原点的轴进行旋转

      这部分推导相比之前的会更加有难度,为此需要使用一些以前没有了解过的概念作为准备.

****** 向量模,向量之间的夹角以及向量积

       那就是欧几里得空间的一些概念: 向量模(norm of vector),向量之间的夹角(angle between vectors)以及向量积(product of vectors)

       在欧几里得空间里面,向量 $\vec{r}$ 是一段有方向的线段,它的长度叫 *模(norm)*, 标记为 $\|r\|$,

       它的方向用单位向量表示,单位向量就是长度为1的有向线段(只要线条有一点长度就能看出方向,用1是为了方便计算),标记为 $\hat{r}$.

       $\vec{r}$ 可以描述为在 $\hat{r}$ 方向长为 $\|\vec{r}\|$, 或者有 $\|\vec{r}\|$ 个单位向量 $\hat{r}$, 因此得到关系 $\vec{r} = \|\vec{r}\|\hat{r}$.

       假设 $\vec{r}$ 是由 $\left(x1, y1, z1\right)$ 到 $\left(x2, y2, z2\right)$, 也就是 $\vec{r} = \left(x2 - x1, y2 - y1, z2 - z1\right)$,

       那么 $\vec{r}$ 的模就是 $\|\vec{r}\| = \sqrt{(x2 - x1)^{2} + (y2 - y1)^{2} + (z2 - z1)^2}$.

       一旦知道 $\vec{r}$ 的模,那么 $\hat{r}$ 就很好办了: $\hat{r} = \frac{\vec{r}}{\|\vec{r}\|} = \frac{\left(x2 - x1, y2 - y1, z2 - z1\right)}{\sqrt{(x2 - x1)^{2} + (y2 - y1)^{2} + (z2 - z1)^2}}$.



       假设现在知道另外一个向量 $\vec{s} = \left((x3, y3, z3\right)$, $\vec{r}$ 在 $\vec{s}$ 上的投影如图所示,它们的夹角为 $\theta$,

       [[../../../files/vector-projection.png]]

       这里可以用 *向量点积* (dot product) 表示它们之间的关系: $\vec{r} \cdot \vec{s} = \|\vec{r}\|\|\vec{s}\|\cos\theta = x3(x2 - x1) + y3(y2 - y1) + z3(z2 - z1)$.

       $\vec{r}$ 在 $\vec{s}$ 上的投影其实就是 $\vec{r}$ 在 $\vec{s}$ 的方向一个分量,标记为 $\vec{r}_{1}$,

       根据三角函数可以得到投影长度为 $\|\vec{r}\|\cos\theta$,

       所以 $\vec{r}$ 和 $\vec{s}$ 之间的点积就是 $\vec{r}_{1}$ 的模以及 $\vec{s}$ 的模的乘积,计算结果是一个标量.

       而 $\frac{\vec{r} \cdot \vec{s}}{\|\vec{r}\|\|\vec{s}\|} = \cos\theta$, 所以 $\|\vec{r}_{1}\| = \|\vec{r}\|\frac{\vec{r} \cdot \vec{s}}{\|\vec{r}\|\|\vec{s}\|} = \frac{\vec{r} \cdot \vec{s}}{\|\vec{s}\|}$,由于 $\vec{r}_{1}$ 和 $\vec{s}$ 的方向是一样的,所以 $\vec{r}_{1} = \frac{\vec{r} \cdot \vec{s}}{\|\vec{s}\|}\hat{s} = \frac{\vec{r} \cdot \vec{s}}{\|\vec{s}\|}\frac{\vec{s}}{\|\vec{s}\|} = \frac{\vec{r} \cdot \vec{s}}{\|\vec{s}\|^{2}}\vec{s}$.

       求出其中一个分量后再求出另外一个分量就不难了: $\vec{r} - \vec{r}_{1}$.



       向量积还有一个: *向量叉积* (cross product),它是用来求出与 $\vec{a}$ 和 $\vec{b}$ 都垂直的向量 $\vec{c}$,

       [[../../../files/cross-product.png]]

       向量 $\vec{a}$ 和 $\vec{b}$ 可以构成一个平面,像这种垂直于整个平面的向量 $\vec{c}$ 称为法线向量(normal vector),

       并且 $\vec{c}$ 的长度是 $\vec{a}$ 和 $\vec{b}$ 组成的平行四边形的面积.

       公式如下: $\vec{a} \times \vec{b} = \|\vec{a}\|\|\vec{b}\|sin\theta \hat{n}$, 其中 $\theta$ 是 $\vec{a}$ 和 $\vec{b}$ 的夹角, $\hat{n}$ 是 $\vec{c}$ 的单位向量,

       计算结果是一个向量,至于基于坐标的向量叉积计算会放到后面进行介绍.


       预备概念已经够了,可以开始推导,要确保你能够理解这些,否则是看不懂接下来的内容的了.

****** 推导

      假设现在是 $p$ 围绕从原点到点 $s$: $\left(s_{x}, s_{y}, s_{z}\right)$ 直线旋转 \theta 度到达 $p^{'}$.

      这个问题可以改变一下描述: $p$ 围绕 $\hat{s}$ 方向的轴旋转 $\theta$ 度到达 $p^{'}$.

      研究 $p$ 围绕 $\hat{s}$ 方向的轴旋转需要先找出垂直于该轴的平面,也就是需要找到两个互相垂直的向量,并且这两个向量也要分别和 $\hat{s}$ 垂直.

      这里可以先求出 $p$ 到 $\hat{s}$ 上的投影 $\vec{p_{1}}$,由于 $\vec{p_{1}}$ 是和 $\hat{s}$ 共线的,所以之后 $p$ 围绕 $\hat{s}$ 旋转是不会影响 $\vec{p_{1}}$ 的, *受影响的是 $p$ 的另外一个分量 $\vec{p_{2}}$,这个分量刚好垂直于 $\hat{s}$*.

      为了更加直观表示 $p$ 的分量与 $s$ 的平行以及垂直关系,这里分别用 $\vec{p_{\parallel}}$ 和 $\vec{p_{\perp}}$ 表示 $\vec{p_{1}}$ 和 $\vec{p_{2}}$.

      那么剩下的只要构造出多一个同时垂直于 $\hat{s}$ 以及 $\vec{p_{\perp}}$ 的向量 $\vec{w}$,关于构造 $\vec{w}$ 最方便就是利用 $\hat{s}$ 与 $\vec{p_{\perp}}$ 的90 度夹角的向量叉积求出.

      现在总结一下可以得到的关系:

      $\vec{p} = \vec{p_{\parallel}} + \vec{p_{\perp}}$

      $\vec{p_{\parallel}} = \frac{\vec{p} \cdot \hat{s}}{\|\hat{s}\|^{2}}\hat{s}$, 因为 $\hat{s}$ 是单位向量,所以 $\vec{p_{\parallel}} = \left(\vec{p} \cdot \hat{s}\right)\hat{s}$.

      $\vec{p_{\perp}} = \vec{p} - \left(\vec{p} \cdot \hat{s}\right)\hat{s}$.

      $\vec{w} = \hat{s} \times \vec{p_{\perp}} = \hat{s} \times \vec{p}$, 因为 $\vec{p_{\perp}}$ 和 $\vec{p}$ 处于同一个平面上,所以可以得到这样的关系.

      现在垂直于 $\hat{s}$ 的平面基底找齐了,可以讨论平面旋转了.我们采用 $T\left(\vec{p}\right)$ 表示 $p$ 围绕 $s$ 旋转.

      $T\left(\vec{p}\right) = T\left(\vec{p_{\parallel}} + \vec{p_{\perp}}\right)$,因为 $T\left(\vec{p}\right)$ 是一个线性变换, 所以 $T\left(\vec{p}\right) = T\left(\vec{p_{\parallel}}\right) + T\left(\vec{p_{\perp}}\right)$.

      刚才也有提到过,受到旋转影响的只有 $\vec{p_{\perp}}$, $\vec{p_{\parallel}}$ 在旋转过后还是不变的,所以 $T\left(\vec{p_{\parallel}}\right) = \vec{p_{\parallel}}$, $T\left(\vec{p}\right) = \vec{p_{\parallel}} + T\left(\vec{p_{\perp}}\right)$.

      而 $T\left(\vec{p_{\perp}}\right)$ 就得像平面旋转那样推导某一轴旋转那样,根据下图可以知道只要利用 $\vec{w}$ 和 $\vec{p_{\perp}}$ 就可以求出 $T\left(p_{\perp}\right)$ 的分量,也就是 $T\left(p_{\perp}\right)$ 分别在 $\vec{w}$ 和 $\vec{p_{\perp}}$ 的投影,求出的分量加起来就可以得到 $T\left(\vec{p_{\perp}}\right)$.

      首先 $T\left(\vec{p_{\perp}}\right)$ 在 $\vec{p_{\perp}}$ 上的投影向量是 $\frac{T\left(\vec{p_{\perp}}\right) \cdot \vec{p_{\perp}}}{\|\vec{p_{\perp}}\|^{2}}\vec{p_{\perp}}$, 其中 $\|T\left(\vec{p_{\perp}}\right)\| = \|\vec{p_{\perp}}\|$,所以可以进一步得到 $\frac{T\left(\vec{p_{\perp}}\right) \cdot \vec{p_{\perp}}}{\|\vec{p_{\perp}}\|^{2}}\vec{p_{\perp}} = \frac{T\left(\vec{p_{\perp}}\right) \cdot \vec{p_{\perp}}}{\|T\left(\vec{p_{\perp}}\right)\| \|\vec{p_{\perp}}\|}\vec{p_{\perp}} = \cos\theta \vec{p_{\perp}}$.

      然后 $T\left(\vec{p_{\perp}}\right)$ 在 $\vec{w}$ 上的投影向量是 $\frac{T \left( \vec{p_{\perp}} \right) \cdot \vec{w}} {\|\vec{w}\|^{2}}\vec{w}$,其中 $\vec{w}$ 就是 $\vec{p_{\perp}}$ 旋转 90 度后得到的,$\|\vec{w}\| = \|\vec{p_{\perp}}\| = \|T\left(\vec{p_{\perp}}\right)\|$,所以可以进一步得到 $\frac{T\left(\vec{p_{\perp}}\right) \cdot \vec{w}}{\|\vec{w}\|^{2}}\vec{w} = \frac{T\left(\vec{p_{\perp}}\right) \cdot \vec{w}}{\|T\left(\vec{p_{\perp}}\right)\| \|\vec{w}\|}\vec{w} = \cos\left(90-\theta\right)\vec{w} = \sin\theta \vec{w}$.

      所以 $T\left(\vec{p_{\perp}}\right) = \cos\theta \vec{p_{\perp}} + \sin\theta \vec{w} = \cos\theta \vec{p_{\perp}} + \sin\theta \left(\hat{s} \times \vec{p}\right)$.

      总结得到,

      \begin{equation}
      \begin{aligned}
      T\left(p\right) & = \vec{p_{\parallel}} + T\left(\vec{p_{\perp}}\right) \\
      & = \left(\vec{p} \cdot \hat{s}\right)\hat{s} + \cos\theta \vec{p_{\perp}} + \sin\theta\left(\hat{s} \times \vec{p}\right) \\
      & = \left(\vec{p} \cdot \hat{s}\right)\hat{s} + \cos\theta\left[\vec{p} - \left(\vec{p} \cdot \hat{s}\right)\hat{s}\right] + \sin\theta\left(\hat{s} \times \vec{p}\right) \\
      & = \left(\vec{p} \cdot \hat{s}\right)\hat{s} + \cos\theta\vec{p} - \cos\theta\left(\vec{p} \cdot \hat{s}\right)\hat{s} + \sin\theta\left(\hat{s} \times \vec{p}\right) \\
      & = \left(1 - \cos\theta\right)\left(\vec{p} \cdot \hat{s}\right)\hat{s} + \cos\theta\vec{p} + \sin\theta\left(\hat{s} \times \vec{p}\right)
      \end{aligned}
      \end{equation}

      现在要写成矩阵的形式,也就是找到一个矩阵 $R$ 满足这样的关系 $T\left(\vec{p}\right) = R\vec{p}$.

      这里需要进一步对向量叉积进行了解,之前只提到不基于坐标的向量叉积的计算,如果只给出了向量的坐标,那么如何计算呢?

      假设现在有 $\vec{u} = \left(x_{u}, y_{u}, z_{u}\right)$ 以及 $\vec{v} = \left(x_{v}, y_{v}, z_{v}\right)$, 叉积为 $\vec{u} \times \vec{v} = \left(\begin{array}{c}0 & -z_{u} & y_{u} \\ z_{u} & 0 & -x_{u} \\ -y_{u} & x_{u} & 0 \end{array}\right)\vec{v}$,

      *叉积的推导* 是这样的:

      假设 $\vec{u}$, $\vec{v}$ 以及它们的叉积结果的向量都是通过基底 $\left(\begin{array}{c}i & j & k\end{array}\right)$ 进行描述的,(提醒一下, $i$, $j$ 和 $k$ 都是单位向量,并且三者相互垂直).

      也就是说 $\vec{u}$ 和 $\vec{v}$ 分别是 $i$, $j$, $k$ 的一个线性组合,所以 $\vec{u} = x_{u}i + y_{u}j + z_{u}k$ 以及 $\vec{v} = x_{v}i + y_{v}j + z_{v}k$,

      \begin{equation}
      \begin{aligned}
      \vec{u} \times \vec{v} & = (x_{u}i + y_{u}j + z_{u}k) \times (x_{v}i + y_{v}j + z_{v}k) \\
      & = x_{u}x_{v}(i \times i) + x_{u}y_{v}(i \times j) + x_{u}z_{v}(i \times k) + y_{u}x_{v}(j \times i) + y_{u}y_{v}(j \times j) + y_{u}z_{v}(j \times k) + z_{u}x_{v}(k \times i) + z_{u}y_{v}(k \times j) + z_{u}z_{v}(k \times k)
      \end{aligned}
      \end{equation}

      因为 $i$, $j$ 以及 $k$ 都是单位向量并且相互垂直,根据 $\vec{a} \times \vec{b} = \|\vec{a}\|\|\vec{b}\|\sin\theta$ 可以得到 $i \times i$, $j \times j$ 以及 $k \times k$ 都为零向量, 还存在这种类型的关系 $i = j \times k$, $-i = k \times j$.

      最后的化简结果是 $\vec{u} \times \vec{v} = (y_{u}z_{v} - z_{u}y_{v})i + (z_{u}x_{v} - x_{u}z_{v})j + (x_{u}y_{v} - y_{u}x_{v})k$, 得到的法线向量是 $\left(y_{u}z_{v} - z_{u}y_{v}, z_{u}x_{v} - x_{u}z_{v}, x_{u}y_{v} - y_{u}x_{v}\right)$,

      再把 $\vec{v}$ 看作自变量集合,并且按照 $x_{v}y_{v}z_{v}$ 的顺序排列项的方式写出方程组: $\begin{equation} \left\{ \begin{aligned} - z_{u}y_{v} + y_{u}z_{v}  = X \\ z_{u}x_{v} - x_{u}z_{v} = Y \\  - y_{u}x_{v} + x_{u}y_{v} = Z \end{aligned} \right. \end{equation}$,

      把方程组里面的 $\vec{v}$ 的分量全部拿掉就得到左乘 $v$ 的矩阵了,也就是上面的结论了.

      再根据这个结论来推导 $\left(\vec{u} \cdot \vec{v}\right)\vec{u} = \left(\begin{array}{c} x_{u}^{2} & x_{u}y_{u} & x_{u}z_{u} \\ x_{u}y_{u} & y_{u}^{2} & y_{u}z_{u} \\ x_{u}z_{u} & y_{u}z_{u} & z_{u}^{2} \end{array}\right)\vec{v}$,根据上面的向量点积可以写成,

      \begin{equation}
      \begin{aligned}
      \left(\vec{u} \cdot \vec{v}\right)\vec{u} & = \left(x_{u}x_{v} + y_{u}y_{v} + z_{u}z_{v}\right)\vec{u} \\
      & = \left(x_{u}x_{v} + y_{u}y_{v} + z_{u}z_{v}\right) \left(\begin{array}{c} x_{u} \\ y_{u} \\ z_{u} \end{array}\right) \\
      & = \left(\begin{array}{c}x_{u}^{2}x_{v} + x_{u}y_{u}y_{v} + x_{u}z_{u}z_{v} \\ x_{u}y_{u}x_{v} + y_{u}^{2}y_{v} + y_{u}z_{u}z_{v} \\ x_{u}z_{u}x_{v} + y_{u}z_{u}y_{v} + z_{u}^{2}z_{v} \end{array}\right) \\
      & = \left(\begin{array}{c} x_{u}^{2} & x_{u}y_{u} & x_{u}z_{u} \\ x_{u}y_{u} & y_{u}^{2} & y_{u}z_{u} \\ x_{u}z_{u} & y_{u}z_{u} & z_{u}^{2} \end{array}\right)\left(\begin{array}{c}x_{v} \\ y_{v} \\ z_{v}\end{array}\right) \\
      & = \left(\begin{array}{c} x_{u}^{2} & x_{u}y_{u} & x_{u}z_{u} \\ x_{u}y_{u} & y_{u}^{2} & y_{u}z_{u} \\ x_{u}z_{u} & y_{u}z_{u} & z_{u}^{2} \end{array}\right)\vec{v}
      \end{aligned}
      \end{equation}

      现在可以把 $T\left(p\right)$ 写成矩阵变换了,

      \begin{equation}
      \begin{aligned}
      T\left(p\right) & =  \left(1 - \cos\theta\right)\left(\vec{p} \cdot \hat{s}\right)\hat{s} + \cos\theta\vec{p} + \sin\theta\left(\hat{s} \times \vec{p}\right) \\
      & = \left(1 - \cos\theta\right) \left(\begin{array}{c} x_{\hat{s}}^{2} & x_{\hat{s}}y_{\hat{s}} & x_{\hat{s}}z_{\hat{s}} \\ x_{\hat{s}}y_{\hat{s}} & y_{\hat{s}}^{2} & y_{\hat{s}}z_{\hat{s}} \\ x_{\hat{s}}z_{\hat{s}} & y_{\hat{s}}z_{\hat{s}} & z_{\hat{s}}^{2} \end{array}\right)\vec{p} + \left(\begin{array}{c} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 0 & 0 & 1 \end{array}\right)\cos\theta\vec{p} + \sin\theta\left(\begin{array}{c}0 & -z_{\hat{s}} & y_{\hat{s}} \\ z_{\hat{s}} & 0 & -\hat{s}_{x} \\ -y_{\hat{s}} & \hat{s}_{x} & 0 \end{array}\right)\vec{p} \\
      & = \left(\left(1 - \cos\theta\right) \left(\begin{array}{c} x_{\hat{s}}^{2} & x_{\hat{s}}y_{\hat{s}} & x_{\hat{s}}z_{\hat{s}} \\ x_{\hat{s}}y_{\hat{s}} & y_{\hat{s}}^{2} & y_{\hat{s}}z_{\hat{s}} \\ x_{\hat{s}}z_{\hat{s}} & y_{\hat{s}}z_{\hat{s}} & z_{\hat{s}}^{2} \end{array}\right) + \cos\theta\left(\begin{array}{c} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 0 & 0 & 1 \end{array}\right) + \sin\theta\left(\begin{array}{c}0 & -z_{\hat{s}} & y_{\hat{s}} \\ z_{\hat{s}} & 0 & -\hat{s}_{x} \\ -y_{\hat{s}} & \hat{s}_{x} & 0 \end{array}\right) \right) \vec{p} \\
      & = \left(\begin{array}{c} \left(1 - \cos\theta \right)x_{\hat{s}}^{2} + \cos\theta & \left(1 - \cos\theta \right)x_{\hat{s}}y_{\hat{s}} - \sin\theta z_{\hat{s}} &  \left(1 - \cos\theta \right)x_{\hat{s}}z_{\hat{s}} + \sin\theta y_{u} \\ \left(1 - \cos\theta\right)x_{\hat{s}}y_{\hat{s}} + \sin\theta z_{\hat{s}} & \left(1 - \cos\theta\right)y_{\hat{s}}^{2} + \cos\theta & \left(1 - \cos\theta \right)y_{\hat{s}}z_{\hat{s}} - \sin\theta x_{\hat{s}} \\ \left(1 - \cos\theta \right)x_{\hat{s}}z_{\hat{s}} - \sin\theta y_{\hat{s}} & \left(1 - \cos\theta \right)y_{\hat{s}}z_{\hat{s}} + \sin\theta x_{\hat{s}} & \left(1 - \cos\theta \right)z_{\hat{s}}^{2} + \cos\theta \end{array}\right)\vec{p}
      \end{aligned}
      \end{equation}

***** 拓展思考

      对于围绕没有经过原点的轴 $l$ 进行旋转,其实这个问题和平面围绕任意点旋转是一样的,

      可以先找一条穿过原点并且平行于 $l$ 的直线 $l^{'}$,把 $l$ 平移到 $l^{'}$ 的位置上,或者说把坐标系原点平移到 $l^{'}$ 上.

      然后像之前一样进行推导,最后还原平移.

      这个问题暂时就搁置了,以后有时间再推导或者干脆不推导(因为 =OpenGL= 也没有这个变换的实现)


*** 关于变换的一些其它概念

**** 欧拉角


**** 四元数
