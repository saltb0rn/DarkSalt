#+title: 理解CSS中的透视
#+date: 2021-02-23
#+index: 理解CSS中的透视
#+tags: Web
#+begin_abstract
我以为在学习了透视投影以后就知道怎么使用CSS中的 =perspective= 属性了,然而我错了.

确实, =OpenGL= 透视和 =CSS= 中的透视概念上是一个东西,但在实际使用上两者还是有差别.
#+end_abstract

*** 什么是透视

    之前也有讲过透视(投影)符合人类人类直觉中的近大远小,就像下面这图,

    #+CAPTION: 敢望路在远方(图片来源与网络)
    [[../../../files/road.jpg]]

    在人的眼中,路两边的线最终会在无限远处相交于某一点,

    在绘画中,这一个点叫做灭点(vanishing point),这一个点之前的景色就是人所能看到的,超过了就看不懂了,所以才叫灭点.

    目前可以了解到,灭点和透视投影里面的视点(view point)有着根本区别: 灭点是观察者视线的终点,视点则是起点.

    有一种叫做透视法的绘画技巧,它分一点透视,两点透视以及三点透视,这里的点就是做灭点.

    这篇 [[https://www.easydrawingtips.com/perspective-drawing-tutorial/][perspective drawing tutorial]] 对透视画法介绍得很到位, 由于 =OpenGL= 里面的透视和 =CSS= 的透视都是一点透视,

    因此我们只要了解一点透视法就可以了,这里稍微总结一下.

    一点透视画法 *最好* 用于绘画那些正面观察者(viewer)的物体,具体操作如下:

    首先在选取一条水平线(horizon line),这条水平线叫做视线的水平高度(eye level),

    如果观察者就在场景中的话,那么这条线相当于观察者的眼睛在场景中离地高度;

    在这条线上选取一个点,这个点就是上面提到得灭点,这样就基本"确定"了观察者在场景中的位置了,

    严格来说,灭点并没有真正确定观察者在场景中的位置,而是确定了观察者在画布上的位置以及观察者的视线方向(永远垂直于画布的Z轴),

    就像下面的图一样,

    #+CAPTION: 灭点和观察者
    [[../../../files/vanishing-point-and-viewer.jpg]]

    但是观察者到场景的距离(在Z轴的距离)并没确定,而视点(view point)则是完全确定了观察者在场景的位置,但没有确定视线方向;

    最后从灭点出发画任意数量的直线,这些直线是辅助线,再根据这些辅助线绘制物体,

    在辅助线的帮助下可以营造出距离感,也就是近大远小的感觉.

*** CSS 的透视

    如果要在 =CSS= 里面 "玩3D",那么就得学习一下下面的 =CSS= 属性以及函数:

    *transform-style*

    *perspective-origin*

    *perspective*

    *perspective()*

    一般会先选定一个元素作为物体的空间,这个空间可以是平面(=2D= 空间),可以是 =3D= 空间
