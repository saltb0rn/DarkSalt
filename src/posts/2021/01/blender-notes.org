#+title: Blender学习笔记
#+date: 2021-01-04
#+index: Blender学习笔记
#+tags: Blender
#+begin_abstract
其实这篇笔记是在我纠结了很久之后才写的,一方面是 =Blender= 作为一款处于成长期的 =3D= 建模软件,

它会经常更新以及改变,就最近而言,在 =2019= 年发布的 =2.8= 系列和以前的版本相比就变化了好多.

而时间点位于 =2021= 年的现在,市面上很多的书籍都是针对 =2.7= 的.

没有合适的书籍对于我来说是一个很严重的问题: 本人不太习惯通过看视频/听课来学习,反映速度跟不上.

这是第二个方面了,我只能看视频来学习这款软件,看视频得到的内容很容易被"左耳进右耳出",所以写笔记是必须的.

但是,在不久的将来 =Blender= 的更新可能会让这些笔记的内容失去价值,日后不能用于参考.

因此只能折中记录一下概念/思路上的内容,图形学的概念这里就不介绍了,忘记的话就去看以往的笔记.

#+end_abstract

*** 如何掌握Blender的快捷键

    =Blender= 的快捷键很多,我个人是十分害怕这种快捷键很多的软件,只有一款我是坚持下来了: =Emacs=.

    但 =Emacs= 可以很容易查出做什么用什么快捷键,快捷键是绑定命令的,因为命令相对容易记忆,

    所以我大部分时间都是直接输入命令完成对应工作,或者按照命令去反查出快捷键.

    =Blender= 作为一款图形操作软件,不熟悉快捷键的话是很影响工作效率的.

    幸好 =Blender= 采用 =Emacs= 一样的设计: 把每个功能的 =API= 都暴露出来,方便用户自定义以及拓展.

    =Blender= 采用 =Python= 作为它的脚本语言,可以在 =Edit - Preferences - Display - Tooltips= 选上 =Python Tooltips= 来打开功能的 =API= 提示.

    #+CAPTION: Blender Preferences Python Tooltips
    [[../../../files/blender-preferences-2.9-pytooltips.png]]

    让鼠标在某个功能上/选项上等等停留时就会弹出 =API= 提示.

    当然快捷键也是一样,不过 =Blender= 快捷键设置是直接显示出来给用户看的.

    可以在菜单栏的 =Edit - Preferences - Keymap= 查看按键绑定,如下图:

    #+CAPTION: Blender Preferences 2.9 Keymap
    [[../../../files/blender-preferences-2.9-keymap.png]]

    按键是有分类的,可以看到下面 =Window=, =Screen=, =View2D= 等分类,而这些分类基本上对应 =API= 的模块分类.

    #+CAPTION: Blender 2.9 Keymap API Path
    [[../../../files/blender-2.9-keymap-api-path.png]]

    展开每个分类可以看到类似图中的红色区域,里面的内容就是按键绑定的 =API=.

    现在来看一下 =Python= 提供 =API=,在这之前请确保自己会使用 =Python= 以及如何调用 =Blender= 提供的模块,

    最好再大概了解一下模块的构成,所有这些问题都可以在[[https://docs.blender.org/api/current/index.html][这里]]得到答案.

    争对模块构成还是稍微提一下,分两大类 =API=: =Application modules= 以及 =Standalone modules=.

    前者是 =Blender= 特供 =API=,所有操作基本都需要访问 =Blender= 定义的数据;

    后者可以说是和 =Blender= 完全没什么关系的 =API=,可以不依赖于 =Blender=,因此叫做 =Standalone=.

    在文档的[[https://docs.blender.org/api/current/info_api_reference.html#operators][API Reference Usage#Operators]]可以看到快捷键都是访问 =bpy.ops= 的 =API=,

    那么上面图中的 =API= 完整路径是 =bpy.ops.wm.call_menu=,具体使用就要看 =API= 的文档说明了.

    反查快捷键就更加轻松了,沿着上面思路原路返回就好,在 =Edit - Preferences - Keymap= 按照分类找到 =API= 就能直接看到快捷键了.

    这里只是介绍一个思路,别忘记 =Blender= 是不断地更新的,包括 =API=,还有说不定哪一天上面的 =UI= 就更新掉了.

    思路是有了,但还是需要时刻关心 =Blender= 的变化以及熟悉功能,这样才能真正提高效率.


*** Mesh

    =Mesh= 在创建模型中是一个很重要的概念,可以抽象地把它理解为一个物体,这个物体是由数个面(faces)组成的,

    每个面则是由数条边(至少三条)组成的,每条边则是由点与点连接而成.

    "面"还有另外一个叫法"多边形"(polygons),叫法取决于工具是如何定义的.

    =Blender= 则是采用了后者,这一点可以在 =Mesh= 的[[https://docs.blender.org/api/current/bpy.types.Mesh.html?highlight=polygons#bpy.types.Mesh][定义]]中看到.

    #+CAPTION: Polygons of Default Cube
    [[../../../files/blender-default-cube-polygons.png]]


*** 法线计算

    在 =Blender= 的 =Edit Mode= 中,可以对 =Mesh= 的面进行选择,使用其中的 =Extrude= 可以看到.

    #+CAPTION: Normal Vector of Single Polygon
    [[../../../files/blender-normal-vector-1.png]]

    如果选择了多个不同朝向的面,那么 =Blender= 会取每个面的法线的中间值,这一点需要记住.

    #+CAPTION: Normal Vector of Multiple Polygon
    [[../../../files/blender-normal-vector-2.png]]
