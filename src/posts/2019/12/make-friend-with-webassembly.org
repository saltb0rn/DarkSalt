#+title: 主动认识 WebAssembly
#+date: 2019-12-18
#+index: 主动认识 WebAssembly
#+status: wd
#+tags: WebAssembly
#+begin_abstract
WebAssembly 是我刚开始接触前端时最想学的技术之一,另外的还有 WebGL,刚好 WebGL 和 WebAssembly 有着不少联系,

两门技术我都"觊觎"好久了,现在也接近过年了,干脆在假期里面把这两个都学了.
#+end_abstract

*** 什么是 WebAssembly

    WebAssembly 实际上是一套针对于字节码(bytecode)的规范,可能有人不知道字节码是做什么的,

    这里要大概先了解一下一门编译型语言的编译过程,编译的过程实际就是一门语言翻译成另外一门语言,这另外一门语言通常是汇编(assembly),

    比如 C 语言编译成汇编语言, C++ 也可以编译成汇编语言等等,实际上很多语言都可以编译成汇编语言,

    这样实现 n 门语言 X 到汇编的语言需要实现 n 个编译器,为了减少工作量以及实现一个编译器支持编译多门语言,

    人们想出了先编译到一个中间层表示(Intermediate Representation),然后再从中间层表示编译到汇编,在规范好中间层以后,只需要实现从语言到中间层的过程就好了,

    中间层到汇编永远只有一种可能.而这个中间层一般都是字节码.而对于 Web 来说,只需要把这段字节码作为"汇编"就足以,最后还需要一个能跑这段字节码的虚拟机.

    这估计也就是 WebAssembly 名字的来源吧.

    目前 WebAssembly 已经是 W3C 的标准了,官方工具是 [[https://emscripten.org/docs/introducing_emscripten/about_emscripten.html][EmScripten]],把别的语言源代码编译成 =.js + .wasm=,也可能是 =.html= 等等.

    其中 =.wasm= 就是 WebAssembly 文件的文件格式.
    

**** asm.js

     在 WebAssembly 的时间点之前有一个叫做 [[http://asmjs.org/][asm.js]] 的技术,由 Mozilla 研发的一个把 C/C++ 代码编译成 JavaScript 的技术,

     这个 JavaScript 与平时的采用 ECMAScript 标准的 JavaScript 的不太一样,
    



    
