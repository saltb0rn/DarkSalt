#+title: 自学编译原理
#+date: 2019-10-01
#+index: 自学编译原理
#+tags: Compiler
#+status: wd
#+begin_abstract
这里是我学习编译原理的笔记,使用的材料是 =Modern Compiler Implementation in C=,俗称"虎书".

其实一直都在我的学习计划之中,但是由于自身原因一直拖到现在,其实书的选择也纠结了好久.

选择虎书是因为比起龙书(Compilers: Principles, Techniques and Tools,编译原理)相对较薄,比起编译原理与实践(=Compiler Construction: Principles and Practice=)的内容更加多,其实个人更推荐使用编译原理与实践来进行自学的.

其实个人之前学了一点直译器的实现,"半途而废"了,因为前端方面的 =eopl= 不是讲得很详细,后端讲的倒还行,所以直译器剩下的部分就等学完编译或者边学边回顾.
#+end_abstract

*** 关于虎书以及读前准备

    根据实现所使用语言来分,虎书有三个不同版本: =C, Java & ML=.本人所使用的就是 =C= 版本的, =C= 语言在读书的时候学了,但是从没有在别的地方用过,

    所以读这本书之前我要先复习一下 =C= 语言的一些内容: https://www.studytonight.com/c/, 这个网站上的讲解都很不错,特别是指针那块,个人评价 =5/5=.

    然后虎书是有配套源代码的,可以在官方网站: https://www.cs.princeton.edu/~appel/modern/c/ 找到,除了源代码还有书中提到的工具,读者跟着书上走一遍问题应该不大.

    还有就是书的代码使用了 =make=, =Makefile= 的使用可以在 https://www.gnu.org/software/make/manual/make.html 找到,只要知道基本用法就可以了.

    编译器用的就是 =gcc= 关于 =Gcc= 的使用教程网上很多,只要掌握基础的编译使用就好,还有就是预处理不属于 =C=,是属于编译器的,这块的内容可以看这里: https://gcc.gnu.org/onlinedocs/cpp/Macros.html.

    还有最好学习一下 =GDB= 的使用,可以方便之后的调试: http://heather.cs.ucdavis.edu/~matloff/UnixAndC/CLanguage/Debug.html.

    万事准备好就可以开始阅读虎书了.要注意的是,没有必要把上面的东西都"精通",不懂的时候再查阅,毕竟上面的东西不是虎书的重点.因此,你只需要花一到两天的时间来大概读一下上面的东西就可以了.
